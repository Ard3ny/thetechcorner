{"id":1164,"date":"2022-02-13T10:06:10","date_gmt":"2022-02-13T10:06:10","guid":{"rendered":"https:\/\/thetechcorner.org\/?p=1164"},"modified":"2022-02-13T10:07:54","modified_gmt":"2022-02-13T10:07:54","slug":"schedule-tasks-using-at-and-cron","status":"publish","type":"post","link":"https:\/\/thetechcorner.org\/?p=1164","title":{"rendered":"Schedule tasks using at and cron"},"content":{"rendered":"\n<p><a href=\"https:\/\/towardsdatascience.com\/create-your-first-cronjob-on-the-linux-server-74e2fdc76e78\">Cron <\/a>is a system that helps Linux users to schedule any task. However, a cron job is any defined task to run in a given time period. It can be a shell script or a simple bash command. Cron job helps us automate our routine tasks, it can be hourly, daily, monthly, etc.<\/p>\n\n\n\n<p><\/p>\n\n\n\n<h2 id=\"cron-configuration-files\">Cron configuration files<\/h2>\n\n\n\n<p>The cron background process is mostly idle. It wakes up once every minute and checks \/etc\/crontab, \/etc\/cron.d, and the user cron table files and determines whether there are any jobs that need to be executed.<\/p>\n\n\n\n<p>The table below summarizes the purpose of the various files and directories used by cron. Knowledge of these files and directories will help you troubleshoot any issues as well as understand cron in more detail.<\/p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>File<\/th><th>Purpose<\/th><\/tr><tr><td>\/etc\/init.d\/crond<\/td><td>Starts the&nbsp;cron&nbsp;daemon in system boot.<\/td><\/tr><tr><td>\/var\/log\/cron<\/td><td>System messages related to the&nbsp;cron&nbsp;process. Useful for troubleshooting problems.<\/td><\/tr><tr><td>\/var\/spool\/cron\/[username]<\/td><td>User&nbsp;crontab&nbsp;files are stored in the&nbsp;\/var\/spool\/crondirectory.<\/td><\/tr><tr><td>\/etc\/cron.allow<\/td><td>Specifies users who can create a&nbsp;cron&nbsp;table.<\/td><\/tr><tr><td>\/etc\/cron.deny<\/td><td>Specifies users who are not allowed to create a&nbsp;cron&nbsp;table.<\/td><\/tr><tr><td>\/etc\/crontab<\/td><td>The system&nbsp;cron&nbsp;table that has commands to run scripts located in the following directories:&nbsp;\/etc\/cron.hourly,&nbsp;\/etc\/cron.daily,&nbsp;\/etc\/cron.weekly, and&nbsp;\/etc\/cron.monthly.<\/td><\/tr><tr><td>\/etc\/cron.d<\/td><td>A directory that contains&nbsp;cron&nbsp;tables for jobs that need to run on a schedule other than hourly, daily, weekly, or monthly.<\/td><\/tr><tr><td>\/etc\/cron.hourly<\/td><td>Directory that contains system scripts to run on an hourly basis.<\/td><\/tr><tr><td>\/etc\/cron.daily<\/td><td>Directory that contains system scripts to run on a daily basis.<\/td><\/tr><tr><td>\/etc\/cron.weekly<\/td><td>Directory that contains system scripts to run on a weekly basis.<\/td><\/tr><tr><td>\/etc\/cron.monthly<\/td><td>Directory that contains system scripts to run on a monthly basis.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<p><\/p>\n\n\n\n<h2 id=\"4a20\">Understand a cron job syntax<\/h2>\n\n\n\n<p>The jobs of individual users are stored in the directory&nbsp;<strong>\/var\/spool\/cron<\/strong>&nbsp;in files matching the usernames. These files always belong to the user root. The files in \/var\/spool\/cron are not edited directly. Instead, a program called crontab is used to manipulate them. The figure below shows the syntax of a cron job.<\/p>\n\n\n\n<p id=\"5ab6\">You can issue the&nbsp;<code>man crontab<\/code>&nbsp;command to see all possible options, but there are generally two that work for most users:&nbsp;<code>-l<\/code>&nbsp;(list) and&nbsp;<code>-e<\/code>&nbsp;(edit).<\/p>\n\n\n\n<ul><li><code><strong>crontab -a &lt;filename&gt;<\/strong><\/code>: create a new&nbsp;<code><strong>&lt;filename&gt;<\/strong><\/code>&nbsp;as crontab file<\/li><li><code><strong>crontab -e<\/strong><\/code>: edit our crontab file or create one if it doesn\u2019t already exist<\/li><li><code><strong>crontab -l<\/strong><\/code>: show up our crontab file<\/li><li><code><strong>crontab -r<\/strong><\/code>: delete our crontab file<\/li><li><code><strong>crontab -v<\/strong><\/code>: show up the last time we have edited our crontab file<\/li><\/ul>\n\n\n\n<div class=\"is-layout-flow wp-block-group\"><div class=\"wp-block-group__inner-container\">\n<pre class=\"wp-block-preformatted\"><strong>minute(s) hour(s) day(s) month(s) weekday(s) command(s)<\/strong><\/pre>\n<\/div><\/div>\n\n\n\n<figure class=\"wp-block-image size-full is-style-default\"><img decoding=\"async\" loading=\"lazy\" width=\"632\" height=\"272\" src=\"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/02\/image-106.png?resize=632%2C272&#038;ssl=1\" alt=\"\" class=\"wp-image-1165\" srcset=\"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/02\/image-106.png?w=632&amp;ssl=1 632w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/02\/image-106.png?resize=300%2C129&amp;ssl=1 300w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/02\/image-106.png?resize=24%2C10&amp;ssl=1 24w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/02\/image-106.png?resize=36%2C15&amp;ssl=1 36w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/02\/image-106.png?resize=48%2C21&amp;ssl=1 48w\" sizes=\"(max-width: 632px) 100vw, 632px\" data-recalc-dims=\"1\" \/><\/figure>\n\n\n\n<p><\/p>\n\n\n\n<h2 id=\"how-does-it-work\">How does it work<\/h2>\n\n\n\n<p>As you can see from the image, the positioning of your entries has meaning, and the entries are separated by spaces. An asterisk (<code>*<\/code>) means every or all, as in every minute or all hours, every day, and so on. In other words, the image currently&nbsp;illustrates a&nbsp;<code>crontab<\/code>&nbsp;entry for a script that will run every minute of every day.<\/p>\n\n\n\n<p><\/p>\n\n\n\n<p>It\u2019s a good practice to provide the full path to any executable inside&nbsp;a script. Likewise, you should also provide the full path to executables or scripts in your&nbsp;<code>crontab<\/code>&nbsp;entries.<\/p>\n\n\n\n<p>The&nbsp;<code>cron<\/code>&nbsp;daemon checks for the existence of entries in the&nbsp;<code>\/var\/spool\/cron<\/code>&nbsp;directory&nbsp;automatically<\/p>\n\n\n\n<p>The&nbsp;<code>cron<\/code>&nbsp;daemon runs as root so it can read the directory&#8217;s contents&nbsp;since only the root user has access to this directory.<\/p>\n\n\n\n<h2 id=\"let-s-try-it-out\">Let&#8217;s try it out<\/h2>\n\n\n\n<ol><li><strong>Schedule a job at December 6th, every year<\/strong><\/li><\/ol>\n\n\n\n<p>This day is my birthday, so obviously useful command would be to run a cron job that will tell you a happy birthday, right?!<\/p>\n\n\n\n<p>To add a new line to the crontab type<\/p>\n\n\n\n<div class=\"is-layout-flow wp-block-group\"><div class=\"wp-block-group__inner-container\">\n<pre class=\"wp-block-preformatted\">crontab -e<\/pre>\n<\/div><\/div>\n\n\n\n<p>Now you should see a blank text editor in which we will add a new line<\/p>\n\n\n\n<div class=\"is-layout-flow wp-block-group\"><div class=\"wp-block-group__inner-container\">\n<pre class=\"wp-block-preformatted\">0 13 6 12 *   echo \"Happy birthday to you! I'm sure you totally forgot about me\" &gt; \/tmp\/wiii.txt <\/pre>\n<\/div><\/div>\n\n\n\n<p>This means the command will run, the first minute, on the 13 or 1 pm, every 6th of the month, in the 12 month or December and every year.<\/p>\n\n\n\n<p><\/p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>To check the syntax especially when learning you can use sites that helps you read the syntax. I like this <a href=\"https:\/\/crontab.guru\/\">one<\/a>. <\/p><\/blockquote>\n\n\n\n<p><\/p>\n\n\n\n<p>When you are done with your command and you are sure the syntax and the date checks out, save the file and list out cron jobs to see if it was added.<\/p>\n\n\n\n<div class=\"is-layout-flow wp-block-group\"><div class=\"wp-block-group__inner-container\">\n<pre class=\"wp-block-preformatted\">crontab -l<\/pre>\n<\/div><\/div>\n\n\n\n<figure class=\"wp-block-image size-full is-style-default\"><img decoding=\"async\" loading=\"lazy\" width=\"640\" height=\"38\" src=\"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/02\/image-107.png?resize=640%2C38&#038;ssl=1\" alt=\"\" class=\"wp-image-1166\" srcset=\"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/02\/image-107.png?w=868&amp;ssl=1 868w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/02\/image-107.png?resize=300%2C18&amp;ssl=1 300w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/02\/image-107.png?resize=768%2C46&amp;ssl=1 768w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/02\/image-107.png?resize=24%2C1&amp;ssl=1 24w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/02\/image-107.png?resize=36%2C2&amp;ssl=1 36w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/02\/image-107.png?resize=48%2C3&amp;ssl=1 48w\" sizes=\"(max-width: 640px) 100vw, 640px\" data-recalc-dims=\"1\" \/><\/figure>\n\n\n\n<p><\/p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>You should try out a lot more of these to get the hang of it. Maybe check out other tutorials for using a cron. (<a href=\"https:\/\/www.redhat.com\/sysadmin\/automate-linux-tasks-cron\">1<\/a>, <a href=\"https:\/\/www.thegeekdiary.com\/10-useful-cron-examples-to-schedule-jobs-in-linux\/\">2<\/a> ,<a href=\"https:\/\/towardsdatascience.com\/create-your-first-cronjob-on-the-linux-server-74e2fdc76e78\">3<\/a>)<\/p><\/blockquote>\n\n\n\n<p><\/p>\n\n\n\n<h3 id=\"few-more-tips\">Few more tips<\/h3>\n\n\n\n<p><strong>Using a slash \/ in crontab jobs as every<\/strong><\/p>\n\n\n\n<div class=\"is-layout-flow wp-block-group\"><div class=\"wp-block-group__inner-container\">\n<pre class=\"wp-block-code\"><code>*\/15 * * * * \/etc\/scripts\/backup.sh<\/code><\/pre>\n<\/div><\/div>\n\n\n\n<p>This means, that this cron job will be executed every 15 minutes forever.<\/p>\n\n\n\n<p><\/p>\n\n\n\n<p><strong>Another thing is using a \/dev\/null<\/strong> <strong>and 2&gt;&amp;1<\/strong><\/p>\n\n\n\n<p>We can easily send our cron job logs and error to the&nbsp;<code><strong>dev\/null<\/strong><\/code>&nbsp;instead of an alert via email. Whatever we send or write to&nbsp;<code><strong>dev\/null<\/strong><\/code>, it will be discarded.<\/p>\n\n\n\n<div class=\"is-layout-flow wp-block-group\"><div class=\"wp-block-group__inner-container\">\n<pre class=\"wp-block-preformatted\">* * * * * cd \/home\/audhi &amp;&amp; \/bin\/bash shell-script.sh &gt; \/dev\/null 2&gt;&amp;1<\/pre>\n<\/div><\/div>\n\n\n\n<p><\/p>\n\n\n\n<h2 id=\"using-at\">Using at<\/h2>\n\n\n\n<p>At is a command that executed jobs as a cron, but it will do in only once. (You save the job by pressing ctrl +d)<\/p>\n\n\n\n<figure class=\"wp-block-image size-full is-style-default\"><img decoding=\"async\" loading=\"lazy\" width=\"458\" height=\"109\" src=\"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/02\/image-108.png?resize=458%2C109&#038;ssl=1\" alt=\"\" class=\"wp-image-1167\" srcset=\"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/02\/image-108.png?w=458&amp;ssl=1 458w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/02\/image-108.png?resize=300%2C71&amp;ssl=1 300w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/02\/image-108.png?resize=24%2C6&amp;ssl=1 24w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/02\/image-108.png?resize=36%2C9&amp;ssl=1 36w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/02\/image-108.png?resize=48%2C11&amp;ssl=1 48w\" sizes=\"(max-width: 458px) 100vw, 458px\" data-recalc-dims=\"1\" \/><\/figure>\n\n\n\n<p><\/p>\n\n\n\n<p>You can list out the at jobs list with<\/p>\n\n\n\n<div class=\"is-layout-flow wp-block-group\"><div class=\"wp-block-group__inner-container\">\n<pre class=\"wp-block-preformatted\">atq<\/pre>\n<\/div><\/div>\n\n\n\n<div class=\"wp-block-image is-style-default\"><figure class=\"aligncenter size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"389\" height=\"60\" src=\"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/02\/image-109.png?resize=389%2C60&#038;ssl=1\" alt=\"\" class=\"wp-image-1168\" srcset=\"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/02\/image-109.png?w=389&amp;ssl=1 389w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/02\/image-109.png?resize=300%2C46&amp;ssl=1 300w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/02\/image-109.png?resize=24%2C4&amp;ssl=1 24w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/02\/image-109.png?resize=36%2C6&amp;ssl=1 36w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/02\/image-109.png?resize=48%2C7&amp;ssl=1 48w\" sizes=\"(max-width: 389px) 100vw, 389px\" data-recalc-dims=\"1\" \/><\/figure><\/div>\n\n\n\n<p><\/p>\n\n\n\n<h2 id=\"using-anacrontab\">Using anacrontab<\/h2>\n\n\n\n<p>By default, much of the cron system is considered the systems administrator&#8217;s domain because it&#8217;s often used for important low-level tasks, like rotating log files and updating certificates.&nbsp;<\/p>\n\n\n\n<p><code>Anacron<\/code>&nbsp;is a service that can be used to execute scheduled tasks or jobs or commands periodically in Linux\/Unix systems with a frequency specified in days<\/p>\n\n\n\n<p><\/p>\n\n\n\n<p>While&nbsp;<code>cron<\/code>&nbsp;is suitable for scheduling tasks on systems that are rarely shut down,&nbsp;<code>anacron<\/code>&nbsp;is suitable for scheduling asynchronous tasks on systems that are shut down regularly.<\/p>\n\n\n\n<p><\/p>\n\n\n\n<p>To configure anacron to run your cron jobs, create a configuration file at&nbsp;<code>\/.local\/etc\/anacrontab<\/code>:<\/p>\n\n\n\n<div class=\"is-layout-flow wp-block-group\"><div class=\"wp-block-group__inner-container\">\n<pre class=\"wp-block-preformatted\">SHELL=\/bin\/sh<br>PATH=\/sbin:\/bin:\/usr\/sbin:\/usr\/bin<br>1 &nbsp;0 &nbsp;cron.mine &nbsp; &nbsp;run-parts \/home\/tux\/.local\/etc\/cron.daily\/<\/pre>\n<\/div><\/div>\n\n\n\n<p>This file tells anacron to run all executable scripts (<code>run-parts<\/code>) found in&nbsp;<code>~\/.local\/etc\/cron.daily<\/code>&nbsp;every one day (that is, daily),<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Cron is a system that helps Linux users to schedule any task. However, a cron [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":1174,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"nf_dc_page":"","om_disable_all_campaigns":false,"_mi_skip_tracking":false},"categories":[219],"tags":[417,416,415,220,418,419],"jetpack_featured_media_url":"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/02\/rhsa-Deploy-configure-and-maintain-systems-1.png?fit=1280%2C720&ssl=1","_links":{"self":[{"href":"https:\/\/thetechcorner.org\/index.php?rest_route=\/wp\/v2\/posts\/1164"}],"collection":[{"href":"https:\/\/thetechcorner.org\/index.php?rest_route=\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/thetechcorner.org\/index.php?rest_route=\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/thetechcorner.org\/index.php?rest_route=\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/thetechcorner.org\/index.php?rest_route=%2Fwp%2Fv2%2Fcomments&post=1164"}],"version-history":[{"count":2,"href":"https:\/\/thetechcorner.org\/index.php?rest_route=\/wp\/v2\/posts\/1164\/revisions"}],"predecessor-version":[{"id":1173,"href":"https:\/\/thetechcorner.org\/index.php?rest_route=\/wp\/v2\/posts\/1164\/revisions\/1173"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/thetechcorner.org\/index.php?rest_route=\/wp\/v2\/media\/1174"}],"wp:attachment":[{"href":"https:\/\/thetechcorner.org\/index.php?rest_route=%2Fwp%2Fv2%2Fmedia&parent=1164"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/thetechcorner.org\/index.php?rest_route=%2Fwp%2Fv2%2Fcategories&post=1164"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/thetechcorner.org\/index.php?rest_route=%2Fwp%2Fv2%2Ftags&post=1164"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}