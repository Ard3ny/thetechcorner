{"id":864,"date":"2022-01-23T10:27:45","date_gmt":"2022-01-23T10:27:45","guid":{"rendered":"https:\/\/thetechcorner.org\/?p=864"},"modified":"2022-01-23T10:27:51","modified_gmt":"2022-01-23T10:27:51","slug":"identify-cpu-memory-intensive-processes-and-kill-processes","status":"publish","type":"post","link":"https:\/\/thetechcorner.org\/?p=864","title":{"rendered":"Identify CPU\/memory intensive processes and kill processes"},"content":{"rendered":"\n<p>To be able of identifying these processes first you need to know a little bit about them.<\/p>\n\n\n\n<p><\/p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p><a href=\"https:\/\/harithj.medium.com\/processes-in-linux-dce78e03172e\">Process <\/a>is simply a\u00a0<strong>running<\/strong>\u00a0application, command, or any other program. For example, whenever you open up your browser, it is stated as being a process until the time you exit it. Another example of a process is a command that is executing until the time it\u00a0<strong>completes<\/strong>\u00a0executing.<\/p><p>A process is assigned many properties such as its memory context, priority which dictates how much time the CPU allocates the process, and most importantly Process ID\u00a0<strong>(PID)<\/strong>.<\/p><p>After a Linux computer\u00a0has been booted up, the Linux Kernel hands control over to a process known as\u00a0<strong>PID1<\/strong>. PID1 is the primary process which is also the first process to start when Linux boots up. On older Linux systems, the primary process was known as\u00a0<em>init<\/em>, while today, it is known as\u00a0<em>Systemd<\/em>. The primary process has not only gone through the name transformation, but it also handles processes in a more streamlined manner. PID1 is the parent process and all the other processes are it\u2019s child processes.<\/p><\/blockquote>\n\n\n\n<p><\/p>\n\n\n\n<p><strong>You can list processes by typing command &#8220;ps aux&#8221; into the terminal, where flag aux<\/strong><\/p>\n\n\n\n<ul><li><strong>a<\/strong>: Shows information about all users<\/li><li><strong>-x<\/strong>: Shows information about processes without terminals<\/li><li><strong>-u<\/strong>: Shows additional information like -f option<\/li><\/ul>\n\n\n\n<div class=\"is-layout-flow wp-block-group\"><div class=\"wp-block-group__inner-container\">\n<pre class=\"wp-block-preformatted\">ps aux<\/pre>\n<\/div><\/div>\n\n\n\n<div class=\"wp-block-image is-style-default\"><figure class=\"aligncenter size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"640\" height=\"186\" src=\"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-150.png?resize=640%2C186&#038;ssl=1\" alt=\"\" class=\"wp-image-865\" srcset=\"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-150.png?w=752&amp;ssl=1 752w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-150.png?resize=300%2C87&amp;ssl=1 300w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-150.png?resize=24%2C7&amp;ssl=1 24w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-150.png?resize=36%2C10&amp;ssl=1 36w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-150.png?resize=48%2C14&amp;ssl=1 48w\" sizes=\"(max-width: 640px) 100vw, 640px\" data-recalc-dims=\"1\" \/><\/figure><\/div>\n\n\n\n<p>Note: There is also command  &#8220;ps -aux&#8221; and  &#8220;ps -ef&#8221;  which are commonly used as well, you can find the difference between the two <a href=\"https:\/\/www.quora.com\/What-is-the-difference-between-ps-elf-and-ps-aux-in-Linux\">here<\/a>.<\/p>\n\n\n\n<p><\/p>\n\n\n\n<h3><strong>Types of Processes<\/strong><\/h3>\n\n\n\n<ol><li><strong>Parent and Child process :<\/strong>\u00a0The 2nd and 3rd column of the ps \u2013f command shows process id and parent\u2019s process id number. For each user process, there\u2019s a parent process in the system, with most of the commands having shell as their parent.<\/li><li><strong>Zombie and Orphan process :\u00a0<\/strong>After completing its execution, a child process is terminated or killed and SIGCHLD updates the parent process about the termination and thus can continue the task assigned to it. But at times when the parent process is killed before the termination of the child process, the child processes become orphan processes, with the parent of all processes \u201cinit\u201d process, becomes their new PID.\u00a0<br>A process which is killed but still shows its entry in the process status or the process table is called a zombie process, they are dead and are not used.<\/li><li><strong>Daemon process :\u00a0<\/strong>They are system-related background processes that often run with the permissions of root and services requests from other processes, they most of the time run in the background and wait for processes it can work along with for ex print daemon.\u00a0<br>When ps \u2013ef is executed, the process with ? in the tty field are daemon processes.<\/li><\/ol>\n\n\n\n<h3><strong>Signals<\/strong><\/h3>\n\n\n\n<p>What is signal?<\/p>\n\n\n\n<p>A\u00a0<strong>signal<\/strong>\u00a0is an event generated by the system in response to a specific condition. When a process receives a signal it may take an action. A standard signal has a default disposition, and it determines the behavior of the process after it is delivered.<\/p>\n\n\n\n<p><\/p>\n\n\n\n<p>Signals can be sent to a process when the system detects a software event. It can either be a user-generated signal or a process generated signal.<\/p>\n\n\n\n<p><\/p>\n\n\n\n<p><strong>What are the types of signals?<\/strong><\/p>\n\n\n\n<p id=\"d170\">Every signal falls into one of the five classes:<\/p>\n\n\n\n<ul><li>Process Control<\/li><li>Resource Control<\/li><li>I\/O Notification<\/li><li>Hardware Condition<\/li><li>Software Condition<\/li><\/ul>\n\n\n\n<p>There are many many signals in the Linux, you can list them by typing<\/p>\n\n\n\n<div class=\"is-layout-flow wp-block-group\"><div class=\"wp-block-group__inner-container\">\n<pre class=\"wp-block-preformatted\">kill -l<\/pre>\n<\/div><\/div>\n\n\n\n<div class=\"wp-block-image is-style-default\"><figure class=\"aligncenter size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"640\" height=\"276\" src=\"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-151.png?resize=640%2C276&#038;ssl=1\" alt=\"\" class=\"wp-image-866\" srcset=\"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-151.png?w=736&amp;ssl=1 736w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-151.png?resize=300%2C129&amp;ssl=1 300w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-151.png?resize=24%2C10&amp;ssl=1 24w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-151.png?resize=36%2C16&amp;ssl=1 36w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-151.png?resize=48%2C21&amp;ssl=1 48w\" sizes=\"(max-width: 640px) 100vw, 640px\" data-recalc-dims=\"1\" \/><\/figure><\/div>\n\n\n\n<p id=\"3e42\">The following are the signals that are commonly encountered:<\/p>\n\n\n\n<p id=\"1794\"><strong>SIGHUP (1):&nbsp;<\/strong>If a process is running from a terminal and that terminal is closed accidentally, then the process receives this signal. \u201cHUP\u201d is short for \u201chang up\u201d and terminates the process. If you don\u2019t want to hang up the process when the terminal is disconnected, start the process with nohup.<\/p>\n\n\n\n<p id=\"a1b1\"><strong>SIGINT (2):&nbsp;<\/strong>Manual interruption of a process from a keyboard. When you hit Ctrl-C, it sends a SIGINT signal to the running process and terminates it.<\/p>\n\n\n\n<p id=\"0e73\"><strong>SIGQUIT(3):\u00a0<\/strong>When a user types\u00a0<code>&lt;ctrl>+\\<\/code>\u00a0in the terminal. It will force the process to produce a\u00a0core dump\u00a0and will terminate the process.<\/p>\n\n\n\n<p id=\"ed75\"><strong>SIGKILL(9):<\/strong>&nbsp;Forcefully terminate a process. This signal can\u2019t be blocked or handled. The receiving process cannot perform clean up when it is terminated with SIGKILL.<\/p>\n\n\n\n<p id=\"f77c\"><strong>SIGPIPE (13)<\/strong>: Broken pipe. If a process is piping in its output to another process (producer | consumer) and if the consumer dies, the producer gets the SIGPIPE signal from the consumer, which terminates the producer process<\/p>\n\n\n\n<p id=\"7663\"><strong>SIGTERM (15):&nbsp;<\/strong>It is the software termination signal. This is the signal that is sent by the kill command by default.<\/p>\n\n\n\n<p id=\"a04a\"><strong>SIGCHLD(17):<\/strong>&nbsp;This signal is sent by a child process to its parent to intimate that the child is stopped or terminated. If a child process terminates before the parent calls the wait syscall on it, the kernel tries to keep the information about the process so that the parent can later call wait to get to know the exit status. This state of the child process, where the process terminates but the entry for the child still exists on the process table of the kernel, is referred to as zombie state and the process is called the zombie process.<\/p>\n\n\n\n<p id=\"3824\"><strong>SIGUSR1, SIGUSR2:\u00a0<\/strong>Signals reserved for developers. These signals can have a custom disposition as configured by the developer. One instance of this signal usage<\/p>\n\n\n\n<p><\/p>\n\n\n\n<h3>TOP TOOL<\/h3>\n\n\n\n<p>Another very useful and commonly used tool for working with Linux process and system resources is top<\/p>\n\n\n\n<div class=\"is-layout-flow wp-block-group\"><div class=\"wp-block-group__inner-container\">\n<pre class=\"wp-block-preformatted\">man top <\/pre>\n<\/div><\/div>\n\n\n\n<figure class=\"wp-block-image size-large is-style-default\"><img decoding=\"async\" loading=\"lazy\" width=\"640\" height=\"143\" src=\"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-152.png?resize=640%2C143&#038;ssl=1\" alt=\"\" class=\"wp-image-867\" srcset=\"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-152.png?resize=1024%2C228&amp;ssl=1 1024w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-152.png?resize=300%2C67&amp;ssl=1 300w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-152.png?resize=768%2C171&amp;ssl=1 768w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-152.png?resize=24%2C5&amp;ssl=1 24w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-152.png?resize=36%2C8&amp;ssl=1 36w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-152.png?resize=48%2C11&amp;ssl=1 48w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-152.png?w=1532&amp;ssl=1 1532w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-152.png?w=1280&amp;ssl=1 1280w\" sizes=\"(max-width: 640px) 100vw, 640px\" data-recalc-dims=\"1\" \/><\/figure>\n\n\n\n<figure class=\"wp-block-image size-full is-style-default\"><img decoding=\"async\" loading=\"lazy\" width=\"640\" height=\"248\" src=\"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-153.png?resize=640%2C248&#038;ssl=1\" alt=\"\" class=\"wp-image-868\" srcset=\"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-153.png?w=928&amp;ssl=1 928w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-153.png?resize=300%2C116&amp;ssl=1 300w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-153.png?resize=768%2C298&amp;ssl=1 768w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-153.png?resize=24%2C9&amp;ssl=1 24w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-153.png?resize=36%2C14&amp;ssl=1 36w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-153.png?resize=48%2C19&amp;ssl=1 48w\" sizes=\"(max-width: 640px) 100vw, 640px\" data-recalc-dims=\"1\" \/><\/figure>\n\n\n\n<p><\/p>\n\n\n\n<p>In short, the top shows all currently running processes in the default order for CPU usage.<\/p>\n\n\n\n<p>You can change the order as anything in the Linux, for example press P is for CPU order, M is for memory etc&#8230; <\/p>\n\n\n\n<p><\/p>\n\n\n\n<h3>Identifying the processes <\/h3>\n\n\n\n<p>Now you finally have all the necessary knowledge and tools to manage process and send signals to them to alter their behavior.<\/p>\n\n\n\n<p>I&#8217;ll demonstrate this on an example. Let&#8217;s make a mini script which will act as our &#8220;unwanted process&#8221; . Simply open one terminal and type<\/p>\n\n\n\n<div class=\"is-layout-flow wp-block-group\"><div class=\"wp-block-group__inner-container\">\n<pre class=\"wp-block-preformatted\">while true; do echo \"Make text\" >> test.txt; done;<\/pre>\n<\/div><\/div>\n\n\n\n<div class=\"wp-block-image is-style-default\"><figure class=\"aligncenter size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"640\" height=\"101\" src=\"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-154.png?resize=640%2C101&#038;ssl=1\" alt=\"\" class=\"wp-image-869\" srcset=\"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-154.png?w=729&amp;ssl=1 729w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-154.png?resize=300%2C47&amp;ssl=1 300w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-154.png?resize=24%2C4&amp;ssl=1 24w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-154.png?resize=36%2C6&amp;ssl=1 36w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-154.png?resize=48%2C8&amp;ssl=1 48w\" sizes=\"(max-width: 640px) 100vw, 640px\" data-recalc-dims=\"1\" \/><\/figure><\/div>\n\n\n\n<p>This script will repeatedly write text to the file. It&#8217;s simple, but It can get out of the hand real quick. Let&#8217;s fix that. Open another terminal alongside of our script.<\/p>\n\n\n\n<p>We have multiple choices now. We can either:<\/p>\n\n\n\n<ul><li><strong>Use top tool <\/strong><\/li><\/ul>\n\n\n\n<figure class=\"wp-block-image size-full is-style-default\"><img decoding=\"async\" loading=\"lazy\" width=\"640\" height=\"65\" src=\"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-156.png?resize=640%2C65&#038;ssl=1\" alt=\"\" class=\"wp-image-871\" srcset=\"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-156.png?w=982&amp;ssl=1 982w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-156.png?resize=300%2C30&amp;ssl=1 300w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-156.png?resize=768%2C77&amp;ssl=1 768w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-156.png?resize=24%2C2&amp;ssl=1 24w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-156.png?resize=36%2C4&amp;ssl=1 36w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-156.png?resize=48%2C5&amp;ssl=1 48w\" sizes=\"(max-width: 640px) 100vw, 640px\" data-recalc-dims=\"1\" \/><\/figure>\n\n\n\n<p>We can already see our process as the second in the list. We know it&#8217;s our process because the command identify as bash in which is our script written. And in just the few seconds it&#8217;s taking a lot of resources.<\/p>\n\n\n\n<p>Now we know the PID of the process we want to end, press &#8220;k&#8221; on your keyboard while you are still in the top utility.<\/p>\n\n\n\n<p>You will be prompted with &#8220;mini killing terminal&#8221; in which you just type the process name.<\/p>\n\n\n\n<figure class=\"wp-block-image size-full is-style-default\"><img decoding=\"async\" loading=\"lazy\" width=\"640\" height=\"152\" src=\"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-157.png?resize=640%2C152&#038;ssl=1\" alt=\"\" class=\"wp-image-872\" srcset=\"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-157.png?w=991&amp;ssl=1 991w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-157.png?resize=300%2C71&amp;ssl=1 300w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-157.png?resize=768%2C183&amp;ssl=1 768w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-157.png?resize=24%2C6&amp;ssl=1 24w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-157.png?resize=36%2C9&amp;ssl=1 36w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-157.png?resize=48%2C11&amp;ssl=1 48w\" sizes=\"(max-width: 640px) 100vw, 640px\" data-recalc-dims=\"1\" \/><\/figure>\n\n\n\n<p><\/p>\n\n\n\n<p>Press enter and the top command will ask you which signal do you which to send to the process (the default one is 15). The 15 or SIGTERM can be ignored be the process, so I always prefer to send SIGKILL with number 9 and press enter.<\/p>\n\n\n\n<p><\/p>\n\n\n\n<div class=\"wp-block-image is-style-default\"><figure class=\"aligncenter size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"640\" height=\"138\" src=\"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-158.png?resize=640%2C138&#038;ssl=1\" alt=\"\" class=\"wp-image-873\" srcset=\"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-158.png?w=981&amp;ssl=1 981w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-158.png?resize=300%2C65&amp;ssl=1 300w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-158.png?resize=768%2C165&amp;ssl=1 768w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-158.png?resize=24%2C5&amp;ssl=1 24w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-158.png?resize=36%2C8&amp;ssl=1 36w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-158.png?resize=48%2C10&amp;ssl=1 48w\" sizes=\"(max-width: 640px) 100vw, 640px\" data-recalc-dims=\"1\" \/><\/figure><\/div>\n\n\n\n<ul><li><strong>Use px aux<\/strong><\/li><\/ul>\n\n\n\n<p>While the top command shows you a live feed of processes, the ps aux makes a current snapshot and sends it to the terminal. Both are not good or bad, it&#8217;s just simply about the uses cases.<\/p>\n\n\n\n<p>The default ps aux displays process sorted by PID number, which is a little useless to us at the moment.<\/p>\n\n\n\n<figure class=\"wp-block-image size-full is-style-default\"><img decoding=\"async\" loading=\"lazy\" width=\"640\" height=\"167\" src=\"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-159.png?resize=640%2C167&#038;ssl=1\" alt=\"\" class=\"wp-image-874\" srcset=\"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-159.png?w=988&amp;ssl=1 988w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-159.png?resize=300%2C78&amp;ssl=1 300w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-159.png?resize=768%2C201&amp;ssl=1 768w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-159.png?resize=24%2C6&amp;ssl=1 24w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-159.png?resize=36%2C9&amp;ssl=1 36w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-159.png?resize=48%2C13&amp;ssl=1 48w\" sizes=\"(max-width: 640px) 100vw, 640px\" data-recalc-dims=\"1\" \/><\/figure>\n\n\n\n<p><\/p>\n\n\n\n<p>To change this we use pipe and grep to filter out results.<\/p>\n\n\n\n<div class=\"is-layout-flow wp-block-group\"><div class=\"wp-block-group__inner-container\">\n<pre class=\"wp-block-preformatted\">ps aux | grep bash<\/pre>\n<\/div><\/div>\n\n\n\n<figure class=\"wp-block-image size-full is-style-default\"><img decoding=\"async\" loading=\"lazy\" width=\"640\" height=\"79\" src=\"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-160.png?resize=640%2C79&#038;ssl=1\" alt=\"\" class=\"wp-image-875\" srcset=\"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-160.png?w=906&amp;ssl=1 906w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-160.png?resize=300%2C37&amp;ssl=1 300w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-160.png?resize=768%2C95&amp;ssl=1 768w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-160.png?resize=24%2C3&amp;ssl=1 24w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-160.png?resize=36%2C4&amp;ssl=1 36w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-160.png?resize=48%2C6&amp;ssl=1 48w\" sizes=\"(max-width: 640px) 100vw, 640px\" data-recalc-dims=\"1\" \/><\/figure>\n\n\n\n<p><\/p>\n\n\n\n<p>We can see a few things here, but with a little thinking you can easily figure out which one is our unwanted process.<\/p>\n\n\n\n<p>When you have the right process, we are going to use the kill command with the signal we want to send.<\/p>\n\n\n\n<div class=\"is-layout-flow wp-block-group\"><div class=\"wp-block-group__inner-container\">\n<pre class=\"wp-block-preformatted\">kill -9 *PID*<\/pre>\n\n\n\n<div class=\"wp-block-image is-style-default\"><figure class=\"aligncenter size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"640\" height=\"141\" src=\"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-162.png?resize=640%2C141&#038;ssl=1\" alt=\"\" class=\"wp-image-877\" srcset=\"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-162.png?w=731&amp;ssl=1 731w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-162.png?resize=300%2C66&amp;ssl=1 300w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-162.png?resize=24%2C5&amp;ssl=1 24w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-162.png?resize=36%2C8&amp;ssl=1 36w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-162.png?resize=48%2C11&amp;ssl=1 48w\" sizes=\"(max-width: 640px) 100vw, 640px\" data-recalc-dims=\"1\" \/><\/figure><\/div>\n<\/div><\/div>\n\n\n\n<div class=\"wp-block-image is-style-default\"><figure class=\"aligncenter size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"640\" height=\"116\" src=\"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-163.png?resize=640%2C116&#038;ssl=1\" alt=\"\" class=\"wp-image-878\" srcset=\"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-163.png?w=736&amp;ssl=1 736w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-163.png?resize=300%2C54&amp;ssl=1 300w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-163.png?resize=24%2C4&amp;ssl=1 24w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-163.png?resize=36%2C7&amp;ssl=1 36w, https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/image-163.png?resize=48%2C9&amp;ssl=1 48w\" sizes=\"(max-width: 640px) 100vw, 640px\" data-recalc-dims=\"1\" \/><\/figure><\/div>\n\n\n\n<p><\/p>\n\n\n\n<p>One last command I&#8217;ll show you is &#8220;pkill&#8221; which doesn&#8217;t need PID of process we want to kill but rather name. This can be very dangerous, and it&#8217;s not so versatile, so I don&#8217;t like to use it. This will kill all the process which we greped above. Even our console we are watching the processes from. <\/p>\n\n\n\n<div class=\"is-layout-flow wp-block-group\"><div class=\"wp-block-group__inner-container\">\n<pre class=\"wp-block-preformatted\">pkill bash<\/pre>\n\n\n\n<p><\/p>\n\n\n\n<p><\/p>\n<\/div><\/div>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Note: You&#8217;ve maybe noticed the another process that is taking a lot of resources. &#8220;tracker-miner-f&#8221; is on the top of top command, but what is it? Because we have been constantly writing new text in to the file, we also used a lot of resources on the process which is indexing these files. <\/p><p>tracker -miner-f is used to index the names and contents of your files in order to easily search and access them in Nautilus<\/p><\/blockquote>\n","protected":false},"excerpt":{"rendered":"<p>To be able of identifying these processes first you need to know a little bit [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":840,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"nf_dc_page":"","om_disable_all_campaigns":false,"_mi_skip_tracking":false},"categories":[219],"tags":[155,334,332,336,220],"jetpack_featured_media_url":"https:\/\/i0.wp.com\/thetechcorner.org\/wp-content\/uploads\/2022\/01\/rhsa-operate-running-systems.png?fit=1280%2C720&ssl=1","_links":{"self":[{"href":"https:\/\/thetechcorner.org\/index.php?rest_route=\/wp\/v2\/posts\/864"}],"collection":[{"href":"https:\/\/thetechcorner.org\/index.php?rest_route=\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/thetechcorner.org\/index.php?rest_route=\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/thetechcorner.org\/index.php?rest_route=\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/thetechcorner.org\/index.php?rest_route=%2Fwp%2Fv2%2Fcomments&post=864"}],"version-history":[{"count":1,"href":"https:\/\/thetechcorner.org\/index.php?rest_route=\/wp\/v2\/posts\/864\/revisions"}],"predecessor-version":[{"id":879,"href":"https:\/\/thetechcorner.org\/index.php?rest_route=\/wp\/v2\/posts\/864\/revisions\/879"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/thetechcorner.org\/index.php?rest_route=\/wp\/v2\/media\/840"}],"wp:attachment":[{"href":"https:\/\/thetechcorner.org\/index.php?rest_route=%2Fwp%2Fv2%2Fmedia&parent=864"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/thetechcorner.org\/index.php?rest_route=%2Fwp%2Fv2%2Fcategories&post=864"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/thetechcorner.org\/index.php?rest_route=%2Fwp%2Fv2%2Ftags&post=864"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}